Resources:
  RodahbotEC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t3.nano
      ImageId: ami-04a0ae173da5807d3
      KeyName: RodahbotKeyPair
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash -xe
          sudo yup install -y python3-pip git
          git clone git@github.com:Stellaris-Evolved/rodahbot.git
          cd rodahbot
          pip3 install -r requirements.txt
          python3 discord_bot.py
      SubnetId: !Ref RodahbotSubnet
      SecurityGroupIds:
        - !Ref RodahbotSecurityGroup
          
  RodahbotVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16

  RodahbotInternetGateway:
    Type: AWS::EC2::InternetGateway

  RodahbotVPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref RodahbotVPC
      InternetGatewayId: !Ref RodahbotInternetGateway

  RodahbotSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref RodahbotVPC
      CidrBlock: 10.0.0.0/24
      AvailabilityZone: us-east-1a

  RodahbotRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref RodahbotVPC

  RodahbotRoute:
    Type: AWS::EC2::Route
    DependsOn: RodahbotVPCGatewayAttachment
    Properties:
      RouteTableId: !Ref RodahbotRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref RodahbotInternetGateway

  RodahbotSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref RodahbotSubnet
      RouteTableId: !Ref RodahbotRouteTable

  RodahbotSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for the Rodahbot Discord bot
      VpcId: !Ref RodahbotVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0 # Replace with a more specific IP range if desired
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0 # Replace with a more specific IP range if desired
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic

  RodahbotEC2InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - Ref: "RodahbotIAMRole"

  RodahbotIAMRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: RodahbotEC2Role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: SecretsManagerAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - secretsmanager:*
                Resource: "*"
        - PolicyName: DynamoDBAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:PutItem
                  - dynamodb:GetItem
                  - dynamodb:UpdateItem
                  - dynamodb:DeleteItem
                  - dynamodb:Scan
                  - dynamodb:Query
                Resource: "arn:aws:dynamodb:us-east-1:718675342327:table/word_count"

  RodahbotElasticIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc

  RodahbotEIPAssociation:
    Type: AWS::EC2::EIPAssociation
    Properties:
      AllocationId: !GetAtt RodahbotElasticIP.AllocationId
      InstanceId: !Ref RodahbotEC2Instance